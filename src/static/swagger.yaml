openapi: 3.0.0
x-stoplight:
  id: z7zj4238co668
info:
  title: AutoScan Back End API
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: Local Django Server
  - url: https://dev.backend.archiscan.ai
    description: Dev Server


paths:
  /api/v1/drawings/{drawingId}/questions/{questionId}/feedback:
    post:
      summary: Provide Feedback on AI Chatbot Response
      description: Allows the user to provide feedback on the AI chatbot's response to a specific question about a drawing.
      security:
        - Token: []
      tags:
        - AI Chat
      parameters:
        - name: drawingId
          in: path
          required: true
          description: The unique identifier of the drawing.
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: The unique identifier of the question.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  langsmith_trace_id:
                    type: string
                    description: The unique identifier (UUID4) of the LangSmith trace for the question.
                    example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                  type:
                    type: string
                    enum: [ POSITIVE, NEGATIVE ]
                    description: The type of feedback provided by the user.
                    example: "POSITIVE"
                  feedback_text:
                    type: string
                    description: Additional feedback text provided by the user.
                    example: "The answer was very helpful."
      responses:
        '200':
          description: Successfully retrieved feedback for AI chatbot answer.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the success or details of the action.
        '403':
          description: Access to the feedback is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '404':
          description: Feedback not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the feedback was not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

  /api/v1/drawings/{drawingId}/questions:
    get:
      summary: Retrieve AI Chatbot Questions for a Drawing
      description: Fetches a list of questions that a user can ask about a specific drawing by its ID. The response includes the processing status of the drawing.
      security:
        - Token: []
      tags:
        - AI Chat
      parameters:
        - name: drawingId
          in: path
          required: true
          description: The unique identifier of the drawing.
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved AI chatbot questions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [ongoing, failed, timed_out, success, no_sections_found, page_limit_exceeded]
                    description: Indicates the current PDF processing status of the drawing.
                  status_message:
                    type: string
                    description: A message indicating the status of the processing. This message may contain additional details.
                  nats_subject:
                    type: string
                    nullable: true
                    description: The NATS subject where AI chatbot responses will be posted.
                  questions:
                    type: array
                    nullable: true
                    description: A list of questions the user can ask about the drawing.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The unique identifier of the question.
                        text:
                          type: string
                          description: The text content of the question.
        '403':
          description: Access to the drawing or questions is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '404':
          description: Drawing not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the drawing was not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

  /api/v1/drawings/{drawingId}/questions/{questionId}/:
    post:
      summary: Ask a Specific Question to the AI Chatbot
      description: Triggers the AI Chatbot to answer a specific question about the drawing. The response of the AI Chatbot will be posted to the specified NATS subject.
      security:
        - Token: []
      tags:
        - AI Chat
      parameters:
        - name: drawingId
          in: path
          required: true
          description: The unique identifier of the drawing.
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: The unique identifier of the question to be asked.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nats_subject:
                  type: string
                  description: The NATS subject where the AI chatbot's response will be posted.
                  example: "ai.chatbot.response.subject"
      responses:
        '200':
          description: The question was successfully asked, and the AI chatbot will respond to the specified NATS subject.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [question_asked, processing]
                    description: The current status of the question being asked.
                  message:
                    type: string
                    description: A message indicating the success or details of the action.
                  langsmith_trace_id:
                    type: string
                    description: The unique identifier of the Langsmith trace for the question.
        '400':
          description: Bad request, possibly due to an invalid `nats_subject` or missing parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
        '403':
          description: Access to the drawing or question is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '404':
          description: Drawing or question not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the drawing or question was not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

  /api/v1/questions/:
    get:
      summary: Retrieve All Questions
      description: Fetches a list of all questions in the system, including their details such as prompt, question, sections, and status.
      security:
        - Token: []
      tags:
        - AI Chat
      responses:
        '200':
          description: Successfully retrieved the list of all questions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    description: A list of all questions in the system.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The unique identifier of the question.
                        prompt:
                          type: string
                          description: The text of the prompt associated with the question.
                        question:
                          type: string
                          description: The short representation of the question displayed to the user.
                        sections:
                          type: array
                          description: A list of sections associated with the question.
                          items:
                            type: string
                            maxLength: 16
                        status:
                          type: string
                          enum: [active, inactive]
                          description: Indicates whether the question is active or inactive.
              example:
                questions:
                  - id: 1
                    prompt: "Summarize the key takeaways from the **Introduction** section."
                    question: "What are the key takeaways?"
                    sections: ["12XXXX", "1312XX"]
                    status: "active"
                  - id: 2
                    prompt: "Explain the methodology outlined in the **Analysis** section."
                    question: "What is the methodology?"
                    sections: ["14XXXX", "1512XX"]
                    status: "inactive"
        '403':
          description: Access to the questions is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

    post:
      summary: Add a New Question for the AI Chatbot
      description: Allows the creation of a new question by providing a detailed prompt and associated sections of a PDF where answers will be searched.
      security:
        - Token: []
      tags:
        - AI Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: Text of a prompt used to send to an LLM in connection with a target section of a PDF file.
                  example: "Summarize the key takeaways from the **Introduction** section."
                question:
                  type: string
                  description: A short representation of the question to be displayed to the user.
                  example: "What are the key takeaways?"
                sections:
                  type: array
                  description: A list of section names from a PDF where the answer should be searched for. Each name must be a string up to 16 characters long.
                  items:
                    type: string
                    maxLength: 16
                  example: ["12XXXX", "1312XX"]
      responses:
        '201':
          description: Successfully created the question.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier of the created question.
                  status:
                    type: string
                    enum: [created]
                    description: Indicates the question was successfully added.
                  message:
                    type: string
                    description: Confirmation message.
                example:
                  id: 123
        '400':
          description: Bad request, possibly due to invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
        '403':
          description: Access to the resource is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.
  /api/v1/questions/{questionId}:
    patch:
      summary: Update Question Fields (Prompt, Question, Sections)
      description: Updates the fields of a specific question, including the prompt, the question text, and the sections associated with it, identified by its unique ID.
      security:
        - Token: []
      tags:
        - AI Chat
      parameters:
        - name: questionId
          in: path
          required: true
          description: The unique identifier of the question to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The new text of the prompt used for the question.
                  example: "Explain the key points in the **Introduction** section of the document."
                question:
                  type: string
                  description: The new short representation of the question.
                  example: "What are the main points from the Introduction?"
                sections:
                  type: array
                  description: A list of section names from a PDF where the answer should be searched. Each name must be a string up to 16 characters long.
                  items:
                    type: string
                    maxLength: 16
                  example: ["12XXXX", "1312XX"]
      responses:
        '204':
          description: Successfully updated the question fields (no content returned).
        '400':
          description: Bad request, possibly due to invalid input or missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
        '403':
          description: Access to the resource is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '404':
          description: Question not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the question was not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

    delete:
      summary: Delete a Question by ID
      description: Deletes a specific question from the system by its unique identifier.
      security:
        - Token: []
      tags:
        - AI Chat
      parameters:
        - name: questionId
          in: path
          required: true
          description: The unique identifier of the question to be deleted.
          schema:
            type: integer
      responses:
        '204':
          description: Question successfully deleted. No content is returned.
        '400':
          description: Bad request, possibly due to an invalid `questionId`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
        '403':
          description: Access to the question is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '404':
          description: Question not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the question was not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

  /api/v1/questions/{questionId}/state:
    patch:
      summary: Update Question State
      description: Updates the status of a specific question (active or inactive) identified by its unique ID.
      security:
        - Token: []
      tags:
        - AI Chat
      parameters:
        - name: questionId
          in: path
          required: true
          description: The unique identifier of the question to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum: [active, inactive]
                  description: The new status of the question.
                  example: "active"
      responses:
        '200':
          description: Successfully updated the question's state.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier of the updated question.
                  status:
                    type: string
                    enum: [active, inactive]
                    description: The updated status of the question.
                  message:
                    type: string
                    description: Confirmation message.
                example:
                  id: 1
                  status: "active"
                  message: "Question status successfully updated."
        '400':
          description: Bad request, possibly due to invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating what went wrong.
        '403':
          description: Access to the resource is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating access is forbidden.
        '404':
          description: Question not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the question was not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating a server-side issue.

  /api/v1/keywords/:
    post:
      summary: Add Keyword
      tags:
        - Keywords
      security:
        - Token: []
      description: Adds a new keyword to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                colorId:
                  type: integer
                type:
                  type: string
                  enum:
                    - Drawing
                    - Specification
                  default: Drawing
      responses:
        '201':
          description: Keyword added successfully.
          content:
            application/json:
              example:
                message: Keyword added successfully.
                keyword:
                  id: 1
                  keyword: NewKeyword
                  colorId: 4
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '409':
          description: Conflict. Keyword already exists.
          content:
            application/json:
              example:
                error: Keyword already exists
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 91xfkzk23oeyu
    get:
      summary: Get All Keywords
      tags:
        - Keywords
      security:
        - Token: []
      description: Retrieve all keywords of a specific type.
      parameters:
        - name: keyword_type
          in: query
          required: false
          description: The type of keywords to return. Defaults to 'Drawing' if not provided.
          schema:
            type: string
            enum: 
              - Drawing
              - Specification
      responses:
        '200':
          description: Successful response with all keywords.
          content:
            application/json:
              example:
                a:
                  ADA:
                    keywordId: 1
                    keywordColor: "#FFFCB7"
                    colorId: 0
                    textColor: "#000"
                b:
                  Backs:
                    keywordId: 1
                    keywordColor: "#FFEDE6"
                    colorId: 1
                    textColor: "#000"
                  Bench:
                    keywordId: 2
                    keywordColor: "#DEFFE1"
                    colorId: 2
                    textColor: "#000"
                  Brackets:
                    keywordId: 3
                    keywordColor: "#DEEFFF"
                    colorId: 4
                    textColor: "#000"
                  "Bent Wire Pulls":
                    keywordId: 4
                    keywordColor: "#DEEFFF"
                    colorId: 6
                    textColor: "#000"
                  Buyouts:
                    keywordId: 5
                    keywordColor: "#DEEFFF"
                    colorId: 7
                    textColor: "#000"
                c:
                  chair:
                    keywordId: 1
                    keywordColor: "#FFE8FA"
                    colorId: 7
                    textColor: "#000"
                  cabinet:
                    keywordId: 2
                    keywordColor: "#F1E8FF"
                    colorId: 7
                    textColor: "#000"
                d:
                  "Demo Station":
                    keywordId: 1
                    keywordColor: "#DEEFFF"
                    colorId: 7
                    textColor: "#000"
                  desk:
                    keywordId: 2
                    keywordColor: "#DEEFFF"
                    colorId: 7
                    textColor: "#000"
                e:
                  ERC:
                    keywordId: 1
                    keywordColor: "#DEEFFF"
                    colorId: 7
                    textColor: "#000"
                  "European style":
                    keywordId: 2
                    keywordColor: "#DEEFFF"
                    colorId: 7
                    textColor: "#000"
                  Epoxy:
                    keywordId: 3
                    keywordColor: "#DEEFFF"
                    colorId: 7
                    textColor: "#000"
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      keywordId:
                        type: integer
                      keywordColor:
                        type: string
                      colorId:
                        type: integer
                      textColor:
                        type: string

          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
        '400':
          description: Bad Request. Invalid keyword type.
          content:
            application/json:
              example:
                error: Invalid keyword
      x-stoplight:
        id: 01zp7eoz3y2mt
  '/api/v1/keywords/{keywordId}/color':
    patch:
      summary: Change Keyword Color
      tags:
        - Keywords
      security:
        - Token: []
      description: Changes the color of an existing keyword.
      parameters:
        - in: path
          name: keywordId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                colorId:
                  type: integer
      responses:
        '200':
          description: Keyword color changed successfully.
          content:
            application/json:
              example:
                message: Keyword color changed successfully.
                keyword:
                  id: 1
                  keyword: ExistingKeyword
                  colorId: 0
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Keyword with the specified ID not found.
          content:
            application/json:
              example:
                error: Keyword not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 0re6knhkjm99i
  /api/v1/2fa/app/activate/:
    post:
      summary: Activates a multi-factor authentication method
      description: Activates the specified MFA method for the current user.
      responses:
        '200':
          description: 2FA activation started.
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: string
                    description: URL-encoded authentication details for the activated method
                    example: 'otpauth://totp/AppName:username?secret=KWO7QY2MKPO53SMI3OEKDTE3XEFS4EOU&issuer=AppName'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '404':
          description: MFA method not found
        '429':
          description: Too many requests
      tags:
        - 2FA
      security:
        - Token: []
      x-stoplight:
        id: 7bi62rb6nbc2u
  /api/v1/2fa/app/activate/confirm/:
    post:
      summary: Confirms activation of a multi-factor authentication method
      description: Confirms the activation of the specified MFA method using a verification code.
      requestBody:
        description: 'Confirmation data, including a verification code.'
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: integer
                  description: The verification code to confirm MFA activation
                  example: 596031
      responses:
        '200':
          description: MFA method activated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  backup_codes:
                    type: array
                    items:
                      type: string
                      description: One-time backup codes for multi-factor authentication
                      example: i4aS2iAg4KBH
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '404':
          description: MFA method not found
        '429':
          description: Too many requests
      tags:
        - 2FA
      security:
        - Token: []
      x-stoplight:
        id: utfjdej9k13ro
  /api/v1/2fa/app/deactivate/:
    post:
      summary: Deactivates a multi-factor authentication method
      description: Deactivates the specified MFA method for the current user.
      requestBody:
        description: A verification code to confirm deactivation.
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  description: The verification code to proceed with deactivation
      responses:
        '200':
          description: MFA method deactivated successfully
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '404':
          description: MFA method not found
        '429':
          description: Too many requests
      tags:
        - 2FA
      security:
        - Token: []
      x-stoplight:
        id: 5cydsno2kjxna
  '/api/v1/categories/{categoryId}/usedInProcessingStatus':
    patch:
      summary: Change if category is used in processing.
      tags:
        - Categories
      security:
        - Token: []
      description: Change if category is used in processing. If category is not included in model the request is rejected.
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: boolean
                  description: 'Indicates whether the category is used in procesing (true) or not (false).'
      responses:
        '204':
          description: Category status changed successfully. No content returned.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Category with the specified ID not found.
          content:
            application/json:
              example:
                error: Category not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: ksg8b69wed8xm
        
  '/api/v1/categories/{categoryId}/modelNumbers':
    patch:
      summary: Modify Model Numbers for a Category
      tags:
        - Categories
      security:
        - Token: []
      description: Modifies the model numbers connected to a category.
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model_numbers:
                  type: array
                  items:
                    type: string
                    maxLength: 50
                  description: 'List of model numbers to be associated with the category. Can be empty.'
            example:
              model_numbers: ["2345", "67890"]
      responses:
        '204':
          description: Model numbers modified successfully. No content returned.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Category with the specified ID not found.
          content:
            application/json:
              example:
                error: Category not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: ksg8b69wed8xm-modelNumbers
  /api/v1/categories/{categoryId}/:
    delete:
      summary: Delete a Category
      tags:
        - Categories
      security:
        - Token: []
      description: Requests deletion of a category with the specified ID.
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Category deleted successfully. No content returned.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Category with the specified ID not found.
          content:
            application/json:
              example:
                error: Category not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: deleteCategoryEndpoint
  /api/v1/categories/simple/:
    post:
      summary: Create a Simple Category
      tags:
        - Categories
      security:
        - Token: []
      description: Requests the creation of a new category with a specified name, label, and associated model numbers.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the category.'
                label:
                  type: string
                  description: 'Label for the category (e.g., "l:example").'
                model_numbers:
                  type: array
                  items:
                    type: string
                    maxLength: 50
                  description: 'List of model numbers to associate with the category.'
            example:
              name: "example_name"
              label: "l:example"
              model_numbers: ["123", "321"]
      responses:
        '204':
          description: Category created.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: createSimpleCategoryEndpoint
  /api/v1/categories/dual_object/:
    post:
      summary: Create a Dual Object Category Set
      tags:
        - Categories
      security:
        - Token: []
      description: Requests the creation of a set of categories representing an object consisting of left and right parts, with associated model numbers for each part and the whole object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_label:
                  type: string
                  description: 'Base label for the category (e.g., "l:test").'
                base_name:
                  type: string
                  description: 'Base name for the category (e.g., "test").'
                left_cat_model_numbers:
                  type: array
                  items:
                    type: string
                    maxLength: 50
                  description: 'List of model numbers for the left part of the category.'
                right_cat_model_numbers:
                  type: array
                  items:
                    type: string
                    maxLength: 50
                  description: 'List of model numbers for the right part of the category.'
                whole_cat_model_numbers:
                  type: array
                  items:
                    type: string
                    maxLength: 50
                  description: 'List of model numbers for the whole object represented by the category.'
            example:
              base_label: "l:test"
              base_name: "test"
              left_cat_model_numbers: ["12", "7"]
              right_cat_model_numbers: ["5435", "54634"]
              whole_cat_model_numbers: ["65856", "6565435"]
      responses:
        '204':
          description: Category set created.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: createDualObjectCategoryEndpoint

  /api/v1/drawings:
    get:
      summary: Get Drawings
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve a paginated list of drawings.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
          description: The page number for pagination.
        - in: query
          name: pageSize
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: The number of drawings to include on each page.
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - name
              - date
              - comments
          description: 'Sort the drawings by name, date, or number of comments.'
        - in: query
          name: filterByName
          schema:
            type: string
          description: Filter drawings by name.
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: owner
          schema:
            type: string
            enum:
              - me
              - all
              - others
          description: Filter drawings by owner. Has higher priority than 'user' parameter.
          example: all
        - in: query
          name: status
          description: Filter by drawing status. Multiple status should be provided as multi query parameter, for example, ...&status=failed&status=processed... For retrieving all statuses, do not provide the parameter at all.
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - in_queue
                - processed
                - processing
                - uploaded
                - failed
        - in: query
          name: user
          description: This parameter is only available to admin users. 'owner' parameter has higher priority, so if 'owner' is provided, 'user' will be ignored.
          required: false
          schema:
              type: integer
              description: Filter by user ID.
      responses:
        '200':
          description: Successful response with a paginated list of drawings.
          content:
            application/json:
              examples:
                0:
                  x-example-key: page
                  value:
                    page: 0
                    totalRecords: 26
                    totalPages: 3
                    records:
                      - id: 11
                        name: Q0194 - Area
                        lastProcessingDate: '1999-01-01'
                        processing_duration: '00-02-25'
                        uploadDate: '2024-01-12'
                        comments: 3
                        size: 16MB
                        status: processed
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                        sectionsExtracted: True
                      - id: 12
                        name: A0210 - Section
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-02-15'
                        comments: 10
                        size: 24MB
                        status: failed
                        supportedStatus: supported
                        owner: other
                        ownerId: 456
                        ownerFirstName: Joe
                        ownerLastName: Trump
                        sectionsExtracted: False
                      - id: 13
                        name: B0333 - Elevation
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-20'
                        comments: 0
                        size: 32MB
                        status: uploaded
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                        sectionsExtracted: True
                      - id: 14
                        name: Q0194 - Area
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-01-12'
                        comments: 3
                        size: 16MB
                        status: processed
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                        sectionsExtracted: True
                      - id: 15
                        name: A0210 - Section
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-02-15'
                        comments: 10
                        size: 24MB
                        status: failed
                        supportedStatus: not_supported
                        owner: other
                        ownerId: 478
                        ownerFirstName: Donald
                        ownerLastName: Biden
                        sectionsExtracted: False
                      - id: 16
                        name: B0333 - Elevation
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-20'
                        comments: 0
                        size: 32MB
                        status: uploaded
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                        sectionsExtracted: False
                      - id: 156
                        name: Q1234 - Best
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-23'
                        comments: 0
                        size: 2MB
                        status: processed
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                        sectionsExtracted: False
                      - id: 0
                        name: Q5235 - Nice
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-24'
                        comments: 0
                        size: 1GB
                        status: processing
                        supportedStatus: not_supported
                        owner: other
                        ownerId: 632
                        ownerFirstName: Mike
                        ownerLastName: Ton
                        sectionsExtracted: False
                      - id: 1
                        name: Music
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-01'
                        comments: 0
                        size: 32MB
                        status: processed
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                        sectionsExtracted: False
                      - id: 32
                        name: Hardwood
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-26'
                        comments: 0
                        size: 444MB
                        status: uploaded
                        supportedStatus: not_supported
                        owner: other
                        ownerId: 632
                        ownerFirstName: Mike
                        ownerLastName: Ton
                        sectionsExtracted: False
                    paginationLinks:
                      first: /api/v1/drawings?page=0&pageSize=10&sortBy=name&order=asc&filterByName=John
                      prev: null
                      next: /api/v1/drawings?page=1&pageSize=10&sortBy=name&order=asc&filterByName=John
                      last: /api/v1/drawings?page=2&pageSize=10&sortBy=name&order=asc&filterByName=John
                1:
                  x-example-key: page
                  value:
                    page: 1
                    totalRecords: 26
                    totalPages: 3
                    records:
                      - id: 111
                        name: 1Q0194 - Area
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-01-12'
                        comments: 13
                        size: 116MB
                        status: processed
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 112
                        name: 1A0210 - Section
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-02-15'
                        comments: 110
                        size: 124MB
                        status: failed
                        supportedStatus: supported
                        owner: other
                        ownerId: 456
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 113
                        name: 1B0333 - Elevation
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-20'
                        comments: 10
                        size: 132MB
                        status: uploaded
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 114
                        name: 1Q0194 - Area
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-01-12'
                        comments: 3
                        size: 16MB
                        status: processed
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 115
                        name: 1A0210 - Section
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-02-15'
                        comments: 10
                        size: 24MB
                        status: processed
                        supportedStatus: not_supported
                        owner: other
                        ownerId: 478
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 116
                        name: 1B0333 - Elevation
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-20'
                        comments: 0
                        size: 32MB
                        status: uploaded
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 1156
                        name: 1Q1234 - Best
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-23'
                        comments: 0
                        size: 2MB
                        status: processed
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 10
                        name: 1Q5235 - Nice
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-24'
                        comments: 0
                        size: 1GB
                        status: processing
                        supportedStatus: supported
                        owner: other
                        ownerId: 632
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 11
                        name: 1Music
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-01'
                        comments: 0
                        size: 32MB
                        status: processed
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 312
                        name: 1Hardwood
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-26'
                        comments: 0
                        size: 444MB
                        status: uploaded
                        supportedStatus: supported
                        owner: other
                        ownerId: 632
                        ownerFirstName: Jane
                        ownerLastName: Smith
                    paginationLinks:
                      first: /api/v1/drawings?page=0&pageSize=10&sortBy=name&order=asc&filterByName=John
                      prev: /api/v1/drawings?page=0&pageSize=10&sortBy=name&order=asc&filterByName=John
                      next: /api/v1/drawings?page=2&pageSize=10&sortBy=name&order=asc&filterByName=John
                      last: /api/v1/drawings?page=2&pageSize=10&sortBy=name&order=asc&filterByName=John
                2:
                  x-example-key: page
                  value:
                    page: 2
                    totalRecords: 26
                    totalPages: 3
                    records:
                      - id: 211
                        name: 2Q0194 - Area
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-01-12'
                        comments: 3
                        size: 16MB
                        status: processed
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 212
                        name: 2A0210 - Section
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-02-15'
                        comments: 10
                        size: 24MB
                        status: processed
                        supportedStatus: supported
                        owner: other
                        ownerId: 456
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 213
                        name: 2B0333 - Elevation
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-20'
                        comments: 0
                        size: 32MB
                        status: uploaded
                        supportedStatus: not_supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Donny
                        ownerLastName: Smith
                      - id: 214
                        name: 2Q0194 - Area
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-01-12'
                        comments: 3
                        size: 16MB
                        status: failed
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Bart
                        ownerLastName: Smith
                      - id: 215
                        name: 2A0210 - Section
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-02-15'
                        comments: 10
                        size: 24MB
                        status: processed
                        supportedStatus: not_supported
                        owner: other
                        ownerId: 478
                        ownerFirstName: Jane
                        ownerLastName: Smith
                      - id: 216
                        name: 2B0333 - Elevation
                        lastProcessingDate: '1999-01-01'
                        uploadDate: '2024-03-20'
                        comments: 0
                        size: 32MB
                        status: uploaded
                        supportedStatus: supported
                        owner: me
                        ownerId: 123
                        ownerFirstName: Jane
                        ownerLastName: Smith
                    paginationLinks:
                      first: /api/v1/drawings?page=0&pageSize=10&sortBy=name&order=asc&filterByName=John
                      prev: /api/v1/drawings?page=1&pageSize=10&sortBy=name&order=asc&filterByName=John
                      next: null
                      last: /api/v1/drawings?page=2&pageSize=10&sortBy=name&order=asc&filterByName=John
              schema:
                type: object
                properties:
                  totalRecords:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  records:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        lastProcessingDate:
                          type: string
                        uploadDate:
                          type: string
                        name:
                          type: string
                        date:
                          type: string
                          format: date
                        comments:
                          type: integer
                          minimum: 0
                        size:
                          type: string
                        status:
                          type: string
                          enum:
                            - processed
                            - processing
                            - uploaded
                            - failed
                        owner:
                          type: string
                          enum:
                            - me
                            - other
                        ownerId:
                          type: integer
                        ownerFirstName:
                          type: string
                        ownerLastName:
                          type: string
                  paginationLinks:
                    type: object
                    properties:
                      first:
                        type: string
                      prev:
                        type: string
                        nullable: true
                      next:
                        type: string
                        nullable: true
                      last:
                        type: string
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 0vh78u6rjevw0
  /api/v1/drawings/{drawing_id}/processings/:
    get:
      summary: Get Processings for a Drawing
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve a dictionary of processing IDs for a specific drawing.
      parameters:
        - in: path
          name: drawing_id
          required: true
          schema:
            type: string
          description: The ID of the drawing.
      responses:
        '200':
          description: A dictionary of processing dates with corresponding IDs.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                example:
                  "12-07-2024 (latest)": 31254124
                  "12-07-2024": 562423
                  "01-06-2024": 5345345
        '404':
          description: Drawing not found.
        '500':
          description: Internal server error.
  '/api/v1/drawings/{drawingId}':
    delete:
      summary: Delete Drawing
      tags:
        - Drawings
      security:
        - Token: []
      description: Delete a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to delete.
      responses:
        '204':
          description: Drawing deleted successfully.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: xsl23ry228dih
  '/api/v1/drawings/':
    delete:
      summary: Bulk Delete Drawings
      tags:
        - Drawings
      security:
        - Token: []
      description: Delete multiple drawings by their IDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                drawing_ids:
                  type: array
                  items:
                    type: integer
                  description: List of drawing IDs to delete.
              required:
                - drawing_ids
            example:
              drawing_ids: [32, 33]
      responses:
        '204':
          description: Drawings deleted successfully.
        '400':
          description: Bad Request. No drawing IDs provided.
          content:
            application/json:
              example:
                error: No drawing IDs provided.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '207':
          description: Multi-Status. Some drawings could not be deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        drawing_id:
                          type: integer
                        error:
                          type: string
              example:
                errors:
                  - drawing_id: 32
                    error: Drawing not found.
                  - drawing_id: 33
                    error: Internal Server Error
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
  /api/v1/drawings/upload/order:
    post:
      summary: Upload Drawing
      description: Initiate the upload of a drawing.
      tags:
        - Drawings
      security:
        - Token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PDF_MD5:
                  type: string
                file_name:
                  type: string
              required:
                - PDF_MD5
                - file_name
      responses:
        '200':
          description: Upload ordered.
          content:
            application/json:
              example:
                uploadId: 123456
                upload_presigned_url: 'https://elasticbeanstalk-us-east-2-685183454381.s3.amazonaws.com/test/example.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAZ7CA5ZSWZV2UV7PX%2F20240405%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Date=20240405T150058Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=3c1b472648ed5eccf5e277bca21753b69d8e952cbf97c64ef1307f266cdc38a0'
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 2soi28hzs5jsj
  '/api/v1/drawings/upload/{uploadId}/finished':
    patch:
      summary: Notify Backend about Finished Upload
      tags:
        - Drawings
      security:
        - Token: []
      description: Notify the backend about a finished upload.
      parameters:
        - in: path
          name: uploadId
          required: true
          schema:
            type: integer
          description: The ID of the finished upload.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: string
                  enum:
                    - success
                    - canceled
                    - failure
                  description: 'The result of the upload (success, canceled, or failed).'
                reason:
                  type: string
                  description: The reason for the result.
      responses:
        '200':
          description: Notification received successfully.
          content:
            application/json:
              example:
                drawingId: 12345
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 6okex4n2192xj
  '/api/v1/drawings/{drawingId}/process':
    post:
      summary: Process Drawings
      description: Initiate the processing of a drawing.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to process.
      tags:
        - Drawings
      security:
        - Token: []
      responses:
        '202':
          description: Processing initiated successfully. Check status for updates.
          content:
            application/json:
              example:
                processingId: 123
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: czv9t29s7iod0
  '/api/v1/drawings/{drawingId}/duplicate':
    post:
      summary: Duplicates drawing.
      description: Duplicated drawing will be owned by the person who initiated duplication.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to duplicate.
      tags:
        - Drawings
      security:
        - Token: []
      responses:
        '200':
          description: Duplication successful.
          content:
            application/json:
              example:
                drawingId: 123
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: czv9t29s7iod0
  '/api/v1/drawings/process/{processingId}/status/':
    patch:
      summary: Notify Backend about processing status.
      tags:
        - Drawings
      security:
        - Token: []
      description: Notify the backend about latest status of a drawing file processing.
      parameters:
        - in: path
          name: processingId
          required: true
          schema:
            type: integer
          description: The ID of the processing.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                step:
                  type: integer
                  description: Step for which progress status is sent.
                progress:
                  type: integer
                  description: Finished % of the current step.
      responses:
        '204':
          description: Notification received successfully.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Processing with the specified ID not found.
          content:
            application/json:
              example:
                error: Processing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: lrmz9isla0nq9
  '/api/v1/drawings/process/{processingId}/finished/':
    patch:
      summary: Notify Backend about Finished Processing
      tags:
        - Drawings
      security:
        - Token: []
      description: Notify the backend about a finished processing.
      parameters:
        - in: path
          name: processingId
          required: true
          schema:
            type: integer
          description: The ID of the processing.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: string
                  enum:
                    - success
                    - failed
                  description: The result of the upload (success or failed).
                keywords_details:
                  type: array
                  items:
                    type: string
                  description: List of strings representing keyword details.
      responses:
        '204':
          description: Notification received successfully.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Processing with the specified ID not found.
          content:
            application/json:
              example:
                error: Processing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: vhmv6yzd0mxam
  /api/v1/drawings/{drawing_id}/processings/{processing_id}/generalFeedback/:
    post:
      summary: Create General Feedback for drawings with processing status PROCESSED or FAILED.
      tags:
        - Feedback
      security:
        - Token: []
      description: Creates a general feedback entry for a specific drawing processing. Supports saving both positive and negative feedback with optional screenshots.
      parameters:
        - in: path
          name: drawing_id
          required: true
          schema:
            type: integer
          description: ID of the drawing.
        - in: path
          name: processing_id
          required: true
          schema:
            type: integer
          description: ID of the drawing processing.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                processing_url:
                  type: string
                  description: URL for the drawing processing.
                type:
                  type: string
                  enum: [POSITIVE, NEGATIVE]
                  description: Type of feedback (Positive or Negative).
                feedback_text:
                  type: string
                  description: Description of the feedback (required for negative feedback).
                screenshots:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: List of screenshot files to upload (optional).
      responses:
        '201':
          description: Feedback created successfully.
          content:
            application/json:
              example:
                message: Feedback created successfully.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Drawing or processing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing or processing not found.
  /api/v1/drawings/{drawing_id}/generalFeedback/:
    post:
      summary: Create General Feedback for for drawings without processing or with processing status in_queue, processing or uploaded.
      tags:
        - Feedback
      security:
        - Token: []
      description: Creates a general feedback entry for a specific drawing without processing. Supports saving both positive and negative feedback with optional screenshots.
      parameters:
        - in: path
          name: drawing_id
          required: true
          schema:
            type: integer
          description: ID of the drawing.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                processing_url:
                  type: string
                  description: URL for the drawing processing.
                type:
                  type: string
                  enum: [POSITIVE, NEGATIVE]
                  description: Type of feedback (Positive or Negative).
                feedback_text:
                  type: string
                  description: Description of the feedback (required for negative feedback).
                screenshots:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: List of screenshot files to upload (optional).
      responses:
        '201':
          description: Feedback created successfully.
          content:
            application/json:
              example:
                message: Feedback created successfully.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '403':
          description: Insufficient permissions
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
  /api/v1/users:
    get:
      summary: Get Users
      tags:
        - Users
      security:
        - Token: []
      description: Retrieve a list of users.
      responses:
        '200':
          description: Successful response with a list of users.
          content:
            application/json:
              example:
                users:
                  - id: 1
                    name: John
                    secondName: Doe
                    email: john.doe@example.com
                    role: Internal User
                    availableRoles:
                      - Admin
                      - Internal User
                  - id: 2
                    name: Jane
                    secondName: Smith
                    email: jane.smith@example.com
                    role: Admin
                    availableRoles:
                      - Admin
                      - Internal User
                  - id: 3
                    name: Richard
                    secondName: Lastnamed
                    email: m.lastname@fake.com
                    role: Super Admin
                    availableRoles:
                      - Super Admin
                  - id: 4
                    name: Peter
                    secondName: External
                    email: non-existing@external.org
                    role: External User
                    availableRoles:
                      - External User
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        secondName:
                          type: string
                        email:
                          type: string
                          format: email
                        role:
                          type: string
                          enum:
                            - Internal User
                            - Admin
                            - Super Admin
                            - External User
                        availableRoles:
                          type: array
                          items:
                            type: string
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: ephd3zjknsxd4
  /api/v1/users/{userId}/role:
    post:
      summary: Change User Role
      description: Update the role of a user.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user to update.
      tags:
        - Users
      security:
        - Token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newRole:
                  type: string
                  enum:
                    - Admin
                    - Internal User
                    - External User
                  description: The new role to assign to the user.
              required:
                - newRole
      responses:
        '200':
          description: User role updated successfully.
          content:
            application/json:
              example:
                message: User role updated successfully.
        '400':
          description: Bad request. User already has the provided role or invalid request payload.
          content:
            application/json:
              example:
                error: User already has the provided role or invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
  /api/v1/users/{userId}/state:
    post:
      summary: Change User State
      description: Update the state of a user.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user to update.
      tags:
        - Users
      security:
        - Token: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum:
                    - active
                    - inactive
                  description: The new state to assign to the user.
              required:
                - state
      responses:
        '200':
          description: User state updated successfully.
          content:
            application/json:
              example:
                message: User state updated successfully.
        '400':
          description: Bad request. User already has the provided state or invalid request payload.
          content:
            application/json:
              example:
                error: User already has the provided state or invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error

  /api/v1/users/{userId}/delete:
    delete:
      summary: Delete User
      description: Delete a user from the system. Only deactivated users can be deleted.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user to delete.
        - in: header
          name: Admin-Password
          required: true
          schema:
            type: string
          description: The password of the admin performing the deletion.
      tags:
        - Users
      security:
        - Token: [ ]
      responses:
        '204':
          description: User was deleted successfully.
        '400':
          description: Bad request. User cannot be deleted.
          content:
            application/json:
              examples:
                user_active:
                  summary: User is still active
                  value:
                    error: User is active - only deactivated users can be deleted.
                wrong_password:
                  summary: Incorrect admin password
                  value:
                    error: Incorrect password.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: User with the specified ID not found.
          content:
            application/json:
              example:
                error: User not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error


  /api/v1/users/profile:
    get:
      summary: Get User Profile
      tags:
        - Users
      security:
        - Token: []
      description: Retrieve the profile of the currently logged-in user.
      responses:
        '200':
          description: Successful response with the user profile.
          content:
            application/json:
              example:
                id: 1
                name: John
                secondName: Doe
                email: john.doe@example.com
                role: Internal User
                availableRoles:
                  - Admin
                  - Internal User
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  secondName:
                    type: string
                  email:
                    type: string
                    format: email
                  role:
                    type: string
                    enum:
                      - Internal User
                      - Admin
                  availableRoles:
                    type: array
                    items:
                      type: string
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 6t6nli0x2qp49
  '/api/v1/drawings/{drawingId}/documents':
    get:
      summary: Get Documents Related to Drawing
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve documents related to a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve documents.
      responses:
        '200':
          description: Successful response with documents related to the drawing.
          content:
            application/json:
              example:
                uploaderFirstName: John
                uploaderSecondName: Doe
                uploadDate: '2022-01-15T12:30:45Z'
                lastProcessingDate: '1999-01-01T12:30:45Z'
                documents:
                  - id: 0
                    type: "PDF"
                    note: "Original"
                    name: "Q0194 - Arach"
                    size: "16 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/0/downloadLink"
                  - id: 1
                    type: "PDF"
                    note: "Processed"
                    name: "Q0194 - Arach"
                    size: "16 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/1/downloadLink"
                  - id: 2
                    type: "CSV"
                    note: null
                    name: "CSV Summary"
                    size: "0.1 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/2/downloadLink"
                  - id: 3
                    type: "PDF"
                    note: "Pre-Annotated"
                    name: "Q0194 - preannotated"
                    size: "22.1 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/3/downloadLink"
              schema:
                type: object
                properties:
                  uploaderFirstName:
                    type: string
                  uploaderSecondName:
                    type: string
                  uploadDate:
                    type: string
                    format: date-time
                  lastProcessingDate:
                    type: string
                    format: date-time
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                          enum: [PDF, CSV]
                        note:
                          type: string
                          nullable: true
                        name:
                          type: string
                        size:
                          type: string
                        download_endpoint:
                          type: string
          headers:
           Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: o2so9blzcejmn

  '/api/v1/drawings/{drawingId}/processings/{processingId}/documents':
    get:
      summary: Get Documents Related to Drawing
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve documents related to a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve documents.
        - in: path
          name: processingId
          required: true
          schema:
            type: integer
          description: The ID of the processing to retrieve documents for.
      responses:
        '200':
          description: Successful response with documents related to the drawing.
          content:
            application/json:
              example:
                uploaderFirstName: John
                uploaderSecondName: Doe
                uploadDate: '2022-01-15T12:30:45Z'
                lastProcessingDate: '1999-01-01T12:30:45Z'
                documents:
                  - id: 0
                    type: "PDF"
                    note: "Original"
                    name: "Q0194 - Arach"
                    size: "16 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/0/downloadLink"
                  - id: 1
                    type: "PDF"
                    note: "Processed"
                    name: "Q0194 - Arach"
                    size: "16 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/1/downloadLink"
                  - id: 2
                    type: "CSV"
                    note: null
                    name: "CSV Summary"
                    size: "0.1 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/2/downloadLink"
                  - id: 3
                    type: "PDF"
                    note: "Pre-Annotated"
                    name: "Q0194 - preannotated"
                    size: "22.1 MB"
                    download_endpoint: "/api/v1/drawings/123/documents/3/downloadLink"
              schema:
                type: object
                properties:
                  uploaderFirstName:
                    type: string
                  uploaderSecondName:
                    type: string
                  uploadDate:
                    type: string
                    format: date-time
                  lastProcessingDate:
                    type: string
                    format: date-time
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                          enum: [PDF, CSV]
                        note:
                          type: string
                          nullable: true
                        name:
                          type: string
                        size:
                          type: string
                        download_endpoint:
                          type: string
          headers:
           Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: o2so9blzcejmn

  '/api/v1/drawings/{drawingId}/archiveDownloadLink':
    get:
      summary: Download Archive File
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve a link to download the archive file for a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to download the archive file.
      responses:
        '200':
          description: Successful response with a link to download the archive file.
          content:
            application/json:
              example:
                downloadLink: 'https://example.com/api/v1/download/drawing123_archive.zip'
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: y64vqqw7wvb4q
  '/api/v1/drawings/{drawingId}/processingStatus':
    get:
      summary: Get Processing Status for Drawing
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve the processing status of a drawing by its ID. Returns processing status for the current or latest processing.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
      responses:
        '200':
          description: Successful response with processing status for the drawing.
          content:
            application/json:
              example:
                status: "in_progress"
                percent_finished: 50
              schema:
                type: object
                required:
                  - status
                  - percent_finished
                properties:
                  status:
                    type: string
                    enum: ["in_progress", "failed", "finished"]
                  percent_finished:
                    type: integer
                    minimum: 0
                    maximum: 100
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
          
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error

  '/api/v1/drawings/{drawingId}/keywords':
    get:
      summary: Get Keywords Related to Drawing
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve keywords related to a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve keywords.
        - in: query
          name: processingId
          required: false
          schema:
            type: integer
          description: The ID of the processing record (optional).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: The type of data to retrieve (Drawing or Specification).
                  example: Drawing
      responses:
        '200':
          description: Successful response with keywords related to the drawing.
          content:
            application/json:
              example:
                m:
                  Microwave:
                    keywordId: 4
                    colorId: 1
                    textColor: "#000000"
                    keywordColor: "#FF99CC"
                    colorPriority: 1
                    colorName: "Pink"
                a:
                  Architect:
                    keywordId: 1
                    colorId: 1
                    textColor: "#000000"
                    keywordColor: "#FF99CC"
                    colorPriority: 1
                    colorName: "Pink"
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: dha5u0o9q5lod
  '/api/v1/drawings/{drawingId}/processings/{processingId}/keywords/{keywordType}/':
    get:
      summary: Get Keywords Related to Drawing
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve keywords related to a drawing by its ID and keyword type.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve keywords.
        - in: path
          name: processingId
          required: true
          schema:
            type: integer
          description: The ID of the processing to retrieve keywords.
        - in: path
          name: keywordType
          required: true
          schema:
            type: string
            description: The type of keywords to retrieve (Drawing or Specification).
            example: Drawing
      responses:
        '200':
          description: Successful response with keywords related to the drawing.
          content:
            application/json:
              example:
                m:
                  Microwave:
                    keywordId: 4
                    colorId: 1
                    textColor: "#000000"
                    keywordColor: "#FF99CC"
                    colorPriority: 1
                    colorName: "Pink"
                a:
                  Architect:
                    keywordId: 1
                    colorId: 1
                    textColor: "#000000"
                    keywordColor: "#FF99CC"
                    colorPriority: 1
                    colorName: "Pink"
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: dha5u0o9q5lod
  '/api/v1/drawings/{drawingId}/objects-found':
    get:
      summary: Get Objects Found in Drawing
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve a list of objects found in a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve objects found.
      responses:
        '200':
          description: Successful response with objects found in the drawing.
          content:
            application/json:
              example:
                "Casework Cabinets": {
                  "base cabinet": {
                    "base cabinet - open": 27,
                    "base cabinet - door": 9,
                    "base cabinet - ADA Sink": 1
                  },
                  "wall cabinet": {
                    "wall cabinet - closed door": 4
                  }
                }
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: object
                    additionalProperties:
                      type: integer
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 5hpj38mfx55kw
  '/api/v1/drawings/{drawingId}/processings/{processingId}/objects-found':
    get:
      summary: Get Objects Found in Drawing
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve a list of objects found in a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve objects found.
        - in: path
          name: processingId
          required: true
          schema:
            type: integer
          description: The ID of the processing to retrieve objects found.
      responses:
        '200':
          description: Successful response with objects found in the drawing.
          content:
            application/json:
              example:
                "Casework Cabinets": {
                  "base cabinet": {
                    "base cabinet - open": 27,
                    "base cabinet - door": 9,
                    "base cabinet - ADA Sink": 1
                  },
                  "wall cabinet": {
                    "wall cabinet - closed door": 4
                  }
                }
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: object
                    additionalProperties:
                      type: integer
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 5hpj38mfx55kw
  '/api/v1/drawings/{drawingId}/processings/{processingId}/objects-config/':
    get:
      summary: Get Objects config used for processing
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve a config of objects used for a processing.
      parameters:
        - name: drawingId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
        - name: processingId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing processing.
      responses:
        200:
          description: Successfully retrieved the objects configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Casework_Cabinets:
                    type: object
                    properties:
                      base_cabinet:
                        type: object
                        properties:
                          base_cabinet_drawer_stack:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 9
                              supercategory:
                                type: string
                                example: base cabinet
                              category:
                                type: string
                                example: l:bcabdrw_5
                              name:
                                type: string
                                example: base cabinet - drawer stack
                              transformed_category:
                                type: array
                                items:
                                  type: string
                                example: []
                              model_numbers:
                                type: array
                                items:
                                  type: string
                                example: ["10392"]
                              horizontal_shelves:
                                type: array
                                items:
                                  type: string
                                example: []
                              vertical_shelves:
                                type: array
                                items:
                                  type: string
                                example: []
                              top_level_category:
                                type: string
                                example: Casework Cabinets
                              front_model_numbers:
                                type: array
                                items:
                                  type: string
                                example: ["10392"]
                              included_in_latest_model_train:
                                type: boolean
                                example: true
                              included_in_processing_result:
                                type: boolean
                                example: true
                              number_of_object_included_in_last_train:
                                type: integer
                                example: 9999
                              type:
                                type: string
                                example: shelves_object
                          base_cabinet_door_left:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 10
                              supercategory:
                                type: string
                                example: base cabinet
                              category:
                                type: string
                                example: l:bcabd[l]
                              name:
                                type: string
                                example: base cabinet - door[l]
                              transformed_category:
                                type: array
                                items:
                                  type: string
                                example: ["l:bcabd[l]", "l:bcabd[w]"]
                              model_numbers:
                                type: array
                                items:
                                  type: string
                                example: ["10121", "10129, 10181, 41129"]
                              horizontal_shelves:
                                type: array
                                items:
                                  type: string
                                example: []
                              vertical_shelves:
                                type: array
                                items:
                                  type: string
                                example: []
                              top_level_category:
                                type: string
                                example: Casework Cabinets
                              front_model_numbers:
                                type: array
                                items:
                                  type: string
                                example: ["10121"]
                              included_in_latest_model_train:
                                type: boolean
                                example: true
                              included_in_processing_result:
                                type: boolean
                                example: true
                              number_of_object_included_in_last_train:
                                type: integer
                                example: 9999
                              type:
                                type: string
                                example: left_part_of_dual_objec
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Categories config not found.
          content:
            application/json:
              example:
                error: Categories config not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
  '/api/v1/drawings/{drawingId}/documents/history':
    get:
      summary: History of Documents Related to Drawing
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve the history of documents related to a drawing by its ID.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve document history.
      responses:
        '200':
          description: Successful response with the history of documents related to the drawing.
          content:
            application/json:
              example:
                documentHistory:
                  - creationDateTime: '2022-01-15T12:30:45Z'
                    drawingPdfFileName: drawing123.pdf
                    processedPdfFileName: drawing123_processed.pdf
                    processedPdfFileId: 1
                    detectionsCsvFileName: drawing123_detections.csv
                    detectionsCsvFileId: 2
                    drawingFileSize: 1024
                    processedPdfFileSize: 2048
                    detectionsCsvFileSize: 512
                  - creationDateTime: '2022-01-20T15:45:30Z'
                    drawingPdfFileName: drawing456.pdf
                    processedPdfFileName: drawing456_processed.pdf
                    processedPdfFileId: 3
                    detectionsCsvFileName: drawing456_detections.csv
                    detectionsCsvFileId: 4
                    drawingFileSize: 1536
                    processedPdfFileSize: 3072
                    detectionsCsvFileSize: 768
              schema:
                type: object
                properties:
                  documentHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        creationDateTime:
                          type: string
                          format: date-time
                        drawingPdfFileName:
                          type: string
                        processedPdfFileName:
                          type: string
                        processedPdfFileId:
                          type: integer
                        detectionsCsvFileName:
                          type: string
                        detectionsCsvFileId:
                          type: integer
                        drawingFileSize:
                          type: integer
                        processedPdfFileSize:
                          type: integer
                        detectionsCsvFileSize:
                          type: integer
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: si7vrg5ntws1m
  /api/v1/users/invite:
    post:
      summary: Invite Users
      tags:
        - Users
      security:
        - Token: []
      description: Invite users by providing their email and role.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                role:
                  type: string
                  enum:
                    - Internal User
                    - Admin
              required:
                - email
                - role
      responses:
        '201':
          description: Invitation sent successfully.
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: lq1j09rijuhis


  /api/v1/oauth2/token:
    post:
      summary: Creates token used to access API resources - implemented by backend.
      tags:
        - Authentication
      description: Authenticate a user by providing auth credentials. In 2FA is configured for user - gives access to only the 2FA auth endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login. Provides authentication token.
          content:
            application/json:
              examples:
                No 2FA setup response:
                  value:
                    auth_token: 49bb0631215aad2de436982cf1ea661da03f7add
                2FA set response:
                  value:
                    ephemeral_token: 4-s885yo-e193f013c08c4a5ff3d9965aae7ea971b86306f4
                    method: app
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
      x-stoplight:
        id: 32u16e9hasfbt
  /api/v1/oauth2/token/terminate/:
    post:
      summary: Invalidate and destroy access token - implemented by backend
      description: Endpoint to log out and invalidate the user's authentication token.
      tags:
        - Authentication
      security:
        - Token: []
      responses:
        '204':
          description: Logout successful. The token has been invalidated.
        '401':
          description: Invalid token.
          content:
            application/json:
              example:
                error: Unauthorized
                message: Invalid token.
      x-stoplight:
        id: 9qpjml2h9nsf5
  /api/v1/oauth2/2fa/token:
    post:
      summary: Creates token used to access API resources using 2FA mechanism.
      description: Authenticates a user based on an ephemeral token and a verification code. The result token provides full access to recourses defined by the user role.
      requestBody:
        description: 'Authentication data, including an ephemeral token and a verification code.'
        content:
          application/json:
            schema:
              type: object
              required:
                - ephemeral_token
                - code
              properties:
                ephemeral_token:
                  type: string
                  description: The ephemeral token received in a previous step
                code:
                  type: string
                  description: The verification code received for multi-factor authentication
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                    description: The authentication token to be used for subsequent requests
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '429':
          description: Too many requests
      tags:
        - Authentication
      x-stoplight:
        id: zu4crxtuwsjnk
  '/api/v1/drawings/{drawingId}/':
    get:
      summary: Get Drawing Details
      tags:
        - Drawings
      security:
        - Token: []
      description: Retrieve details of a drawing by its ID.
      parameters:
        - in: path
          name: drawingdId
          required: true
          schema:
            type: integer
          description: The ID of the drawing to retrieve details.
      responses:
        '200':
          description: Successful response with details of the drawing.
          content:
            application/json:
              example:
                id: 123
                name: Q0194 - Area
                uploadDate: '2024-01-12'
                lastProcessingDate: '2024-01-13'
                processing_duration: '00-02-25'
                comments: 3
                size: 16MB
                status: processed
                supportedStatus: supported,
                owner: me
                ownerId: 12
                ownerFirstName: John
                ownerLastName: Dave
                sectionsExtracted: True
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing with the specified ID not found.
          content:
            application/json:
              example:
                error: Drawing not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 4p00dhugvqn2d

  /api/v1/categories/train_categories/:
    get:
      summary: Get All Train Categories
      description: Retrieve all categories and associated objects that can be included in train. **Authentication:** The `TRAIN-API-KEY` must be provided in the request header.
      tags:
        - Categories
      security:
        - TRAIN-API-KEY: []
      parameters:
        - in: header
          name: TRAIN-API-KEY
          required: true
          schema:
            type: string
          description: The API key required for authentication.
      responses:
        '200':
          description: Successful response with all categories and objects.
          content:
            application/json:
              example:
                - id: 125
                  supercategory: "filler panels"
                  category: "l:filbs"
                  name: "filler panels - base side filler"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Accessories"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 126
                  supercategory: "filler panels"
                  category: "l:filws"
                  name: "filler panels - wall side filler"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Accessories"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 127
                  supercategory: "filler panels"
                  category: "l:filts"
                  name: "filler panels - tall side filler"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Accessories"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 135
                  supercategory: "end panels/pedestals"
                  category: "l:endrs"
                  name: "end panels/pedestals - rectangular shape"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Accessories"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 136
                  supercategory: "end panels/pedestals"
                  category: "l:endas"
                  name: "end panels/pedestals - angled or radius shape"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Accessories"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 144
                  supercategory: "plam countertops"
                  category: "l:plamref"
                  name: "plam countertops - roll edge front"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Countertops"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 149
                  supercategory: "solid surface countertops"
                  category: "l:sstopvpg"
                  name: "solid surface countertops - vendor price group"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Countertops"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
                - id: 150
                  supercategory: "solid surface countertops"
                  category: "l:sstopfe"
                  name: "solid surface countertops - front edge style"
                  transformed_category: []
                  model_numbers: []
                  horizontal_shelves: []
                  vertical_shelves: []
                  top_level_category: "Countertops"
                  front_model_numbers: []
                  included_in_latest_model_train: false
                  included_in_processing_result: false
                  number_of_object_included_in_last_train: null
                  type: "regular_object"
              schema:
                type: object
                properties:
                  Top level category:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          id:
                            type: integer
                          supercategory:
                            type: string
                          category:
                            type: string
                          name:
                            type: string
                          transformed_category:
                            type: array
                            items:
                              type: string
                          model_numbers:
                            type: array
                            items:
                              type: string
                          horizontal_shelves:
                            type: array
                            items:
                              type: string
                          vertical_shelves:
                            type: array
                            items:
                              type: string
                          top_level_category:
                            type: string
                          front_model_numbers:
                            type: array
                            items:
                              type: string
                          included_in_latest_model_train:
                            type: boolean
                          included_in_processing_result:
                            type: boolean
                          number_of_object_included_in_last_train:
                            type: integer
                            nullable: true
                          type:
                            type: string
                          can_be_deleted:
                            type: boolean
                          deletion_protection_reason:
                            type: string
                            nullable: true
        '403':
          description: Train Api Key is not provided or it is wrong.
          content:
            application/json:
              example:
                error: Forbidden
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: dqxmppb6u3cze

    patch:
      summary: Partial Update Categories
      description: Update categories scope, label, name, number_of_object_included_in_last_train. **Authentication:** The `TRAIN-API-KEY` must be provided in the request header.
      tags:
        - Categories
      security:
        - TRAIN-API-KEY: [ ]
      parameters:
        - in: header
          name: TRAIN-API-KEY
          required: true
          schema:
            type: string
          description: The API key required for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                    type: object
                    properties:
                      id:
                        type: integer
                      supercategory:
                        type: string
                      category:
                        type: string
                      name:
                        type: string
                      transformed_category:
                        type: array
                        items:
                          type: string
                      model_numbers:
                        type: array
                        items:
                          type: string
                      horizontal_shelves:
                        type: array
                        items:
                          type: string
                      vertical_shelves:
                        type: array
                        items:
                          type: string
                      top_level_category:
                        type: string
                      included_in_latest_model_train:
                        type: boolean
                      number_of_object_included_in_last_train:
                        type: integer
                        nullable: true
                    required:
                      - id
                      - category
                      - name
                      - included_in_latest_model_train
                      - number_of_object_included_in_last_train

      responses:
        '200':
          description: Successful response with all categories and objects.
          content:
            application/json:
              example:
                - id: 125
                - id: 126
                - id: 127
                - id: 135
                - id: 136
                - id: 144
              schema:
                type: object
                properties:
                  Top level category:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          id:
                            type: integer
                          supercategory:
                            type: string
                          category:
                            type: string
                          name:
                            type: string
                          transformed_category:
                            type: array
                            items:
                              type: string
                          model_numbers:
                            type: array
                            items:
                              type: string
                          horizontal_shelves:
                            type: array
                            items:
                              type: string
                          vertical_shelves:
                            type: array
                            items:
                              type: string
                          top_level_category:
                            type: string
                          front_model_numbers:
                            type: array
                            items:
                              type: string
                          included_in_latest_model_train:
                            type: boolean
                          included_in_processing_result:
                            type: boolean
                          number_of_object_included_in_last_train:
                            type: integer
                            nullable: true
                          type:
                            type: string
                          can_be_deleted:
                            type: boolean
                          deletion_protection_reason:
                            type: string
                            nullable: true
        '403':
          description: Train Api Key is not provided or it is wrong.
          content:
            application/json:
              example:
                error: Forbidden
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: dqxmppb6u3cze

  /api/v1/categories/:
    get:
      summary: Get All Categories
      description: Retrieve all categories and associated objects. Accessible only by admin users.
      tags:
        - Categories
      security:
        - Token: []
      responses:
        '200':
          description: Successful response with all categories and objects.
          content:
            application/json:
              example:
                Accessories:
                  "filler panels":
                    "filler panels - base side filler":
                      id: 125
                      supercategory: "filler panels"
                      category: "l:filbs"
                      name: "filler panels - base side filler"
                      transformed_category: []
                      model_numbers: []
                      horizontal_shelves: []
                      vertical_shelves: []
                      top_level_category: "Accessories"
                      front_model_numbers: []
                      included_in_latest_model_train: false
                      included_in_processing_result: false
                      number_of_object_included_in_last_train: null
                      type: "regular_object"
                      can_be_deleted: false
                      pre_delete_message: "Some example text."
                      deletion_protection_reason: "Some example text."
                    "filler panels - wall side filler":
                      id: 126
                      supercategory: "filler panels"
                      category: "l:filws"
                      name: "filler panels - wall side filler"
                      transformed_category: []
                      model_numbers: []
                      horizontal_shelves: []
                      vertical_shelves: []
                      top_level_category: "Accessories"
                      front_model_numbers: []
                      included_in_latest_model_train: false
                      included_in_processing_result: false
                      number_of_object_included_in_last_train: null
                      type: "regular_object"
                      can_be_deleted: true
                      pre_delete_message: null
                      deletion_protection_reason: null
                    "filler panels - tall side filler":
                      id: 127
                      supercategory: "filler panels"
                      category: "l:filts"
                      name: "filler panels - tall side filler"
                      transformed_category: []
                      model_numbers: []
                      horizontal_shelves: []
                      vertical_shelves: []
                      top_level_category: "Accessories"
                      front_model_numbers: []
                      included_in_latest_model_train: false
                      included_in_processing_result: false
                      number_of_object_included_in_last_train: null
                      type: "regular_object"
                      can_be_deleted: false
                      pre_delete_message: "Some example text."
                      deletion_protection_reason: "Some example text."
                  "end panels/pedestals":
                    "end panels/pedestals - rectangular shape":
                      id: 135
                      supercategory: "end panels/pedestals"
                      category: "l:endrs"
                      name: "end panels/pedestals - rectangular shape"
                      transformed_category: []
                      model_numbers: []
                      horizontal_shelves: []
                      vertical_shelves: []
                      top_level_category: "Accessories"
                      front_model_numbers: []
                      included_in_latest_model_train: false
                      included_in_processing_result: false
                      number_of_object_included_in_last_train: null
                      type: "regular_object"
                      can_be_deleted: false
                      pre_delete_message: "Some example text."
                      deletion_protection_reason: "Some example text."
                    "end panels/pedestals - angled or radius shape":
                      id: 136
                      supercategory: "end panels/pedestals"
                      category: "l:endas"
                      name: "end panels/pedestals - angled or radius shape"
                      transformed_category: []
                      model_numbers: []
                      horizontal_shelves: []
                      vertical_shelves: []
                      top_level_category: "Accessories"
                      front_model_numbers: []
                      included_in_latest_model_train: false
                      included_in_processing_result: false
                      number_of_object_included_in_last_train: null
                      type: "regular_object"
                      can_be_deleted: false
                      pre_delete_message: "Some example text."
                      deletion_protection_reason: "Some example text."
                  Countertops:
                    "plam countertops":
                      "plam countertops - roll edge front":
                        id: 144
                        supercategory: "plam countertops"
                        category: "l:plamref"
                        name: "plam countertops - roll edge front"
                        transformed_category: []
                        model_numbers: []
                        horizontal_shelves: []
                        vertical_shelves: []
                        top_level_category: "Countertops"
                        front_model_numbers: []
                        included_in_latest_model_train: false
                        included_in_processing_result: false
                        number_of_object_included_in_last_train: null
                        type: "regular_object"
                        can_be_deleted: false
                        pre_delete_message: "Some example text."
                        deletion_protection_reason: "Some example text."
                    "solid surface countertops":
                      "solid surface countertops - vendor price group":
                        id: 149
                        supercategory: "solid surface countertops"
                        category: "l:sstopvpg"
                        name: "solid surface countertops - vendor price group"
                        transformed_category: []
                        model_numbers: []
                        horizontal_shelves: []
                        vertical_shelves: []
                        top_level_category: "Countertops"
                        front_model_numbers: []
                        included_in_latest_model_train: false
                        included_in_processing_result: false
                        number_of_object_included_in_last_train: null
                        type: "regular_object"
                        can_be_deleted: True
                        pre_delete_message: null
                        deletion_protection_reason: null
                      "solid surface countertops - front edge style":
                        id: 150
                        supercategory: "solid surface countertops"
                        category: "l:sstopfe"
                        name: "solid surface countertops - front edge style"
                        transformed_category: []
                        model_numbers: []
                        horizontal_shelves: []
                        vertical_shelves: []
                        top_level_category: "Countertops"
                        front_model_numbers: []
                        included_in_latest_model_train: false
                        included_in_processing_result: false
                        number_of_object_included_in_last_train: null
                        type: "regular_object"
                        can_be_deleted: True
                        pre_delete_message: null
                        deletion_protection_reason: null
              schema:
                type: object
                properties:
                  Top level category:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          id:
                            type: integer
                          supercategory:
                            type: string
                          category:
                            type: string
                          name:
                            type: string
                          transformed_category:
                            type: array
                            items:
                              type: string
                          model_numbers:
                            type: array
                            items:
                              type: string
                          horizontal_shelves:
                            type: array
                            items:
                              type: string
                          vertical_shelves:
                            type: array
                            items:
                              type: string
                          top_level_category:
                            type: string
                          front_model_numbers:
                            type: array
                            items:
                              type: string
                          included_in_latest_model_train:
                            type: boolean
                          included_in_processing_result:
                            type: boolean
                          number_of_object_included_in_last_train:
                            type: integer
                            nullable: true
                          type:
                            type: string
                          can_be_deleted:
                            type: boolean
                          pre_delete_message:
                            type: string
                            nullable: true
                          deletion_protection_reason:
                            type: string
                            nullable: true
        '401':
          description: Unauthorized. Invalid token or non-admin user.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: dqxmppb6u3cze
  '/api/v1/keywords/{keywordId}':
    delete:
      summary: Delete Keyword
      tags:
        - Keywords
      security:
        - Token: []
      description: Deletes a keyword from the system by providing its ID.
      parameters:
        - in: path
          name: keywordId
          required: true
          schema:
            type: integer
          description: The ID of the keyword to be deleted.
      responses:
        '204':
          description: Keyword deleted successfully.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Keyword not found.
          content:
            application/json:
              example:
                error: Keyword not found
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: rll79ebke8zd6
  /api/v1/keywords/palette-colors:
    get:
      summary: Get Palette Colors
      tags:
        - Keywords
      security:
        - Token: []
      description: Retrieve palette colors.
      responses:
        '200':
          description: Successful response with palette colors.
          content:
            application/json:
              example:
                paletteColors:
                  - paletteColorId: 1
                    color: '#FF5733'
                    used: true
                  - paletteColorId: 2
                    color: '#33FF57'
                    used: false
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: rrvvbcwreoxfc
  /api/v1/keywords/colors:
    get:
      summary: Get Colors
      tags:
        - Keywords
      security:
        - Token: []
      description: Retrieve colors based on the specified type.
      parameters:
        - name: color_type
          in: query
          required: false
          description: The type of colors to return. Defaults to 'Drawing' if not provided.
          schema:
            type: string
            enum:
              - Drawing
              - Specification
      responses:
        '200':
          description: Successful response with colors.
          content:
            application/json:
              example:
                colors:
                  - colorId: 4
                    textColor: '#000000'
                    colorPriority: 1
                    colorType: 'Drawing'
                    keywordColor: '#FF5733'
                    colorName: Red
                  - colorId: 2
                    textColor: '#000000'
                    colorPriority: 5
                    colorType: 'Drawing'
                    keywordColor: '#33FF57'
                    colorName: Green
        '400':
          description: Bad Request. Invalid color type.
          content:
            application/json:
              example:
                error: Invalid color type. Must be either "Drawing" or "Specification".
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 3awhsi3jlfzvn
  /api/v1/keywords/colors/{colorId}:
    delete:
      summary: Delete Color
      tags:
        - Keywords
      security:
        - Token: []
      description: Delete a color by its ID.
      parameters:
        - in: path
          name: colorId
          required: true
          schema:
            type: integer
          description: The ID of the color to be deleted.
      responses:
        '204':
          description: Color deleted successfully.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Color with the specified ID not found.
          content:
            application/json:
              example:
                error: Color not found.
        '409':
          description: Conflict. There are still keywords using this color.
          content:
            application/json:
              example:
                error: Keywords still use this color.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: 0knxtkkc9xti7
  /api/v1/keywords/colors/:
    post:
      summary: Add Color
      tags:
        - Keywords
      security:
        - Token: []
      description: Add a new color to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                priority:
                  type: integer
                paletteColorId:
                  type: integer
              required:
                - priority
                - paletteColorId
      responses:
        '201':
          description: Color added successfully.
          content:
            application/json:
              example:
                message: Color added successfully.
                color:
                  id: 44
                  priority: 0
                  color: '#FF0000'
                  paletteColorId: 0
        '400':
          description: Invalid request payload or missing parameters.
          content:
            application/json:
              example:
                error: Invalid request payload.
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '409':
          description: Conflict. Color priority or palette color ID is already used by another color.
          content:
            application/json:
              example:
                error: Color priority or palette color ID is already used.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
      x-stoplight:
        id: dd2yfnjbk883f
  /api/v1/drawings/{drawing_id}/processings/{processing_id}/key-phrases-config/{keyword_type}/:
    get:
      summary: Get Key Phrases Config used for processing
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve a config of key phrases used for a processing.
      parameters:
        - name: drawing_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
        - name: processing_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing processing.
        - name: keyword_type
          in: path
          required: false
          schema:
            type: string
          description: The type of keywords to retrieve (optional).
      responses:
        200:
          description: Successfully retrieved the key-phrases configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  a:
                    type: object
                    properties:
                      $%#$#@!ABUTTING:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 7
                          colorId:
                            type: integer
                            example: 5
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#FF33FF"
                          colorPriority:
                            type: integer
                            example: 5
                          colorName:
                            type: string
                            example: "Magenta Pink"
                      ACCESSORIES:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 6
                          colorId:
                            type: integer
                            example: 5
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#FF33FF"
                          colorPriority:
                            type: integer
                            example: 5
                          colorName:
                            type: string
                            example: "Magenta Pink"
                  "0-9":
                    type: object
                    properties:
                      404:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 5
                          colorId:
                            type: integer
                            example: 5
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#FF33FF"
                          colorPriority:
                            type: integer
                            example: 5
                          colorName:
                            type: string
                            example: "Magenta Pink"
                  b:
                    type: object
                    properties:
                      BRACKET:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 4
                          colorId:
                            type: integer
                            example: 4
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#FFFF33"
                          colorPriority:
                            type: integer
                            example: 4
                          colorName:
                            type: string
                            example: "Yellow Sun"
                  c:
                    type: object
                    properties:
                      CONTRACTOR:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 3
                          colorId:
                            type: integer
                            example: 3
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#3357FF"
                          colorPriority:
                            type: integer
                            example: 3
                          colorName:
                            type: string
                            example: "Blue Ocean"
                  d:
                    type: object
                    properties:
                      DIMENSIONS:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 2
                          colorId:
                            type: integer
                            example: 2
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#33FF57"
                          colorPriority:
                            type: integer
                            example: 2
                          colorName:
                            type: string
                            example: "Green Lime"
                  i:
                    type: object
                    properties:
                      INTERIOR:
                        type: object
                        properties:
                          keywordId:
                            type: integer
                            example: 1
                          colorId:
                            type: integer
                            example: 1
                          textColor:
                            type: string
                            example: "#000000"
                          keywordColor:
                            type: string
                            example: "#87CEEB"
                          colorPriority:
                            type: integer
                            example: 1
                          colorName:
                            type: string
                            example: "Sky Blue"
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Key-phrases config not found.
          content:
            application/json:
              example:
                error: Key-phrases config not found.
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
  /api/v1/users/:
    post:
      summary: Create a new user - implemented by backend
      description: Endpoint for user registration.
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: The first name of the new user.
                last_name:
                  type: string
                  description: The last name of the new user.
                email:
                  type: string
                  format: email
                  description: The email address of the new user.
                password:
                  type: string
                  format: password
                  description: The password for the new user.
                re_password:
                  type: string
                  format: password
                  description: Password repeat.
                registration_token:
                    type: string
                    description: The registration token, created by admin user.
              required:
                - first_name
                - last_name
                - email
                - password
                - re_password
                - registration_token
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              example:
                id: 1
                email: john@example.com
                first_name: John,
                last_name: Dave
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Unable to create account.
      x-stoplight:
        id: nt4ply6bapuaw
  /api/v1/users/activation/:
    post:
      summary: Activate a user account  - implemented by backend.
      description: Endpoint for activating a user account after registration.
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: The user's unique identifier.
                token:
                  type: string
                  description: The activation token sent to the user's email.
              required:
                - uid
                - token
      responses:
        '204':
          description: User account activated successfully.
          content:
            application/json:
              example:
                detail: User account activated successfully.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
  /api/v1/users/resend_activation/:
    post:
      summary: Resend activation email
      description: Endpoint to resend the activation email for a user who has not yet activated their account.
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user to resend the activation email to.
              required:
                - email
      responses:
        '200':
          description: Activation email resent successfully.
          content:
            application/json:
              example:
                detail: Activation email resent successfully. Check your email for the activation link.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
        '404':
          description: Not Found. User with the provided email not found.
          content:
            application/json:
              example:
                error: Not Found
                message: User with the provided email not found.
      x-stoplight:
        id: cnj6wm022s8av
  /api/v1/users/set_password/:
    post:
      summary: Set a new password
      description: Endpoint to set a new password with the current password for a user.
      tags:
        - Authentication
      security:
        - Token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                  format: password
                  description: The new password for the user.
                re_new_password:
                  type: string
                  format: password
                  description: Repeat the new password for confirmation.
                current_password:
                  type: string
                  format: password
                  description: The current password of the user for verification.
              required:
                - new_password
                - re_new_password
                - current_password
      responses:
        '204':
          description: Password set successfully.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
                current_password:
                  - Invalid password.
      x-stoplight:
        id: bvxg2bgc0etwr
  /api/v1/users/reset_password/:
    post:
      summary: Initiate a password reset
      description: Endpoint to initiate the password reset process for a user.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user requesting the password reset.
              required:
                - email
      responses:
        '200':
          description: Password reset initiated successfully. Check your email for further instructions.
          content:
            application/json:
              example:
                detail: Password reset initiated successfully. Check your email for further instructions.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
        '404':
          description: Not Found. User with the provided email not found.
          content:
            application/json:
              example:
                error: Not Found
                message: User with the provided email not found.
      x-stoplight:
        id: 8k8kxwcd89jrb

  /api/v1/users/nats_creds/:
      get:
        summary: Retrieve NATS Authentication Credentials
        description: |
          Endpoint to retrieve NATS authentication credentials for a user.
        tags:
          - Authentication
        security:
          - Token: [ ]
        responses:
          '200':
            description: NATS authentication credentials retrieved successfully.
            content:
              application/json:
                example:
                  username: "nats_user"
                  password: "secure_password"
                schema:
                  type: object
                  properties:
                    username:
                      type: string
                      description: "NATS authentication username."
                    password:
                      type: string
                      description: "NATS authentication password."
          '400':
            description: Bad request. Invalid or missing request parameters.
            content:
              application/json:
                example:
                  error: Bad Request
                  message: Invalid request payload.
          '401':
            description: Unauthorized. The token is missing or invalid.
            content:
              application/json:
                example:
                  error: Unauthorized
                  message: Invalid authentication token.
          '500':
            description: Internal Server Error.
            content:
              application/json:
                example:
                  error: Internal Server Error
                  message: Something went wrong on the server.
        x-stoplight:
          id: abc123xyz


  /api/v1/sw-versions/:
    get:
      summary: Get Current Software Versions
      tags:
        - Software versions
      security:
        - Token: []
      description: Retrieve the current software versions of the app.
      responses:
        '200':
          description: Current software versions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  back_end_sw_version:
                    type: string
                    example: "0.1.4"
                  model_version:
                    type: string
                    example: "23/02/2024"
                  ml_sw_version:
                    type: string
                    example: "0.3.4"
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal server error.
  /api/v1/comments/test/:
    get:
      summary: Example endpoint returning XML
      responses:
        '200':
          description: Successful response
          content:
            application/xml:
              schema:
                type: string
                example: |
                  <?xml version="1.0" encoding="UTF-8" ?>
                  <xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
                    <pdf-info xmlns="http://www.pdftron.com/pdfinfo" version="2" import-version="4" />
                    <fields />
                    <annots>
                      <text page="0" rect="290.060,543.140,321.060,574.140" color="#E44234" flags="print,nozoom,norotate" name="bb4c0dfb-b5c9-8ea4-3668-17b878701180" title="Taras" subject="Comment" date="D:20240722123544+03'00'" creationdate="D:20240722123524+03'00'" icon="Comment" statemodel="Review">
                        <trn-custom-data bytes="{&quot;trn-mention&quot;:&quot;{\&quot;contents\&quot;:\&quot;Test comment\\n\&quot;,\&quot;ids\&quot;:[]}&quot;}"/>
                        <contents>Test comment
                        </contents>
                        <contents-richtext>
                          <body>
                            <p>
                              <span>Test comment
                              </span>
                            </p>
                          </body>
                        </contents-richtext>
                      </text>
                      <text page="0" rect="290.060,543.140,321.060,574.140" color="#FFFF00" flags="print,nozoom,norotate" inreplyto="bb4c0dfb-b5c9-8ea4-3668-17b878701180" name="3235109b-a8ce-48c5-03f3-f78496bc3f02" title="Taras" subject="Comment" date="D:20240722123600+03'00'" creationdate="D:20240722123549+03'00'" icon="Comment" statemodel="Review">
                        <trn-custom-data bytes="{&quot;trn-mention&quot;:&quot;{\&quot;contents\&quot;:\&quot;Reply on test comment\\n\&quot;,\&quot;ids\&quot;:[]}&quot;}"/>
                        <contents>Reply on test comment
                        </contents>
                        <contents-richtext>
                          <body>
                            <p>
                              <span>Reply on test comment
                              </span>
                            </p>
                          </body>
                        </contents-richtext>
                      </text>
                      <text page="0" rect="298.170,305.820,329.170,336.820" color="#E44234" flags="print,nozoom,norotate" name="d406a15d-fa07-bd6c-8836-bc89c43aed01" title="Taras" subject="Comment" date="D:20240722123608+03'00'" creationdate="D:20240722123603+03'00'" icon="Comment" statemodel="Review">
                        <trn-custom-data bytes="{&quot;trn-mention&quot;:&quot;{\&quot;contents\&quot;:\&quot;Test comment 2\\n\&quot;,\&quot;ids\&quot;:[]}&quot;}"/>
                        <contents>Test comment 2
                        </contents>
                        <contents-richtext>
                          <body>
                            <p>
                              <span>Test comment 2
                              </span>
                            </p>
                          </body>
                        </contents-richtext>
                      </text>
                    </annots>
                    <pages>
                      <defmtx matrix="1,0,0,-1,0,841.89" />
                    </pages>
                  </xfdf>
  /api/v1/users/reset_password_confirm/:
    post:
      summary: Confirm and complete password reset
      description: Endpoint to confirm and complete the password reset process for a user.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: The user's unique identifier.
                token:
                  type: string
                  description: The password reset token sent to the user's email.
                new_password:
                  type: string
                  format: password
                  description: The new password for the user.
                re_new_password:
                  type: string
                  format: password
                  description: Repeat the new password for confirmation.
              required:
                - uid
                - token
                - new_password
                - re_new_password
      responses:
        '200':
          description: Password reset successfully completed. You can now log in with your new password.
          content:
            application/json:
              example:
                detail: Password reset successfully completed. You can now log in with your new password.
        '400':
          description: Bad request. Check the request payload.
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid data provided.
        '404':
          description: Not Found. User with the provided UID not found.
          content:
            application/json:
              example:
                error: Not Found
                message: User with the provided UID not found.
        '410':
          description: Gone. Password reset token expired or invalid.
          content:
            application/json:
              example:
                error: Gone
                message: Password reset token expired or invalid.
      x-stoplight:
        id: hsiui9upwkkgr
  /api/v1/drawings/{drawingId}/processings/{processingId}/sw-versions:
    get:
      summary: Get versions of SW and model used for a specific processing.
      tags:
        - Drawing processings
      security:
        - Token: []
      description: Retrieve software version details used for a specific drawing processing.
      parameters:
        - in: path
          name: drawingId
          required: true
          schema:
            type: string
          description: The ID of the drawing.
        - in: path
          name: processingId
          required: true
          schema:
            type: string
          description: The ID of the processing.
      responses:
        '200':
          description: Software versions for the specified processing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  front_end_sw_version:
                    type: string
                    example: "0.1.3"
                  back_end_sw_version:
                    type: string
                    example: "0.1.4"
                  model_version:
                    type: string
                    example: "23/02/2024"
                  ml_sw_version:
                    type: string
                    example: "0.3.4"
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '404':
          description: Drawing or processing not found.
        '500':
          description: Internal server error.
  /api/v1/registration/token:
    post:
      summary: Create User Registration Token
      description: Creates registration token for a new user. Only administrators can create tokens.
      tags:
        - Registration
      security:
        - Token: []
      requestBody:
        description: 'Creates a new registration token.'
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Registration token created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: 'ID of the registration token.'
                    example: 1
                  registration_token:
                    type: string
                    description: 'Registration token (UUID).'
                    example: '123e4567-e89b-12d3-a456-426614174000'
                  created_by:
                    type: integer
                    description: 'ID of the user who created the token.'
                    example: 10
                  created_at:
                    type: string
                    format: date-time
                    description: 'Timestamp when the token was created.'
                    example: '2024-10-10T12:34:56Z'
        '401':
          description: Unauthorized. Invalid token or authentication failed.
          content:
            application/json:
              example:
                error: Unauthorized
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
  /api/v1/registration/token/{registration_token}/:
    get:
      summary: Check User Registration Token
      description: Checks if a registration token exists and is valid. If the token is invalid (expired or already used), an error will be returned.
      tags:
        - Registration
      security:
        - Token: []
      parameters:
        - in: path
          name: registration_token
          required: true
          schema:
            type: string
            description: 'Registration token (UUID).'
      responses:
        '204':
          description: Registration token is valid.
        '400':
          description: Invalid or expired registration token.
          content:
            application/json:
              example:
                error: User registration ID has expired
        '404':
          description: Registration token not found.
          content:
            application/json:
              example:
                error: Registration token not found
        '500':
          description: Internal Server Error.
          content:
            application/json:
              example:
                error: Internal Server Error
                
  /api/v1/drawings/{drawing_id}/processings-comparison/{processing_id_1}/{processing_id_2}/found-drawing-keywords/:
    get:
      summary: Compare Found Drawing Keywords
      description: Compare found drawing keywords between two processing results.
      tags:
        - Processings Comparison
      parameters:
        - name: drawing_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
        - name: processing_id_1
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the first (older/left) processing.
        - name: processing_id_2
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the second (newer/right) processing.
      responses:
        '200':
          description: Successfully compared found drawing keywords.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comparison_result:
                    type: object
                    properties:
                      status:
                        type: string
                        example: changed
                      left:
                        type: object
                        properties:
                          status:
                            type: string
                            example: changed
                          0-9:
                            type: object
                            properties:
                              status:
                                type: string
                                example: identical
                              605:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: identical
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 535
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Violet
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 9
                          q:
                            type: object
                            properties:
                              status:
                                type: string
                                example: added
                              QUERY:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: added
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 600
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Cyan
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 3
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#00FFFF"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Drawing
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 3
                                  something:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      b:
                                        type: object
                                        properties:
                                          status:
                                            type: string
                                            example: added
                                          value:
                                            type: integer
                                            example: 2
                                      a:
                                        type: object
                                        properties:
                                          status:
                                            type: string
                                            example: added
                                          value:
                                            type: integer
                                            example: 1
                          g:
                            type: object
                            properties:
                              status:
                                type: string
                                example: deleted
                              GENERAL:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: deleted
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 544
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Violet
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 1
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 9
                          p:
                            type: object
                            properties:
                              status:
                                type: string
                                example: changed
                              PLASTIC:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: changed
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: changed
                                      old_value:
                                        type: integer
                                        example: 571
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Pink
                                  colorPriority:
                                    type: integer
                                    example: 5
                                  textColor:
                                    type: string
                                    example: "#000000"
                                  keywordColor:
                                    type: string
                                    example: "#FF99CC"
                                  colorType:
                                    type: string
                                    example: Drawing
                                  colorId:
                                    type: integer
                                    example: 1
                      right:
                        type: object
                        properties:
                          status:
                            type: string
                            example: changed
                          0-9:
                            type: object
                            properties:
                              status:
                                type: string
                                example: identical
                              605:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: identical
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 535
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Violet
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 9
                          q:
                            type: object
                            properties:
                              status:
                                type: string
                                example: added
                              QUERY:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: added
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 600
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Cyan
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 3
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#00FFFF"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Drawing
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 3
                                  something:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      b:
                                        type: object
                                        properties:
                                          status:
                                            type: string
                                            example: added
                                          value:
                                            type: integer
                                            example: 2
                                      a:
                                        type: object
                                        properties:
                                          status:
                                            type: string
                                            example: added
                                          value:
                                            type: integer
                                            example: 1
                          g:
                            type: object
                            properties:
                              status:
                                type: string
                                example: deleted
                              GENERAL:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: deleted
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 544
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Violet
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 1
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 9
                          p:
                            type: object
                            properties:
                              status:
                                type: string
                                example: changed
                              PLASTIC:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: changed
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: changed
                                      new_value:
                                        type: integer
                                        example: 572
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Pink
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 5
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#FF99CC"
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Drawing
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
        '403':
          description: Access to the comparison is forbidden.
        '404':
          description: Drawing or processing not found.
        '500':
          description: Internal server error.

  /api/v1/drawings/{drawing_id}/processings-comparison/{processing_id_1}/{processing_id_2}/found-specification-keywords/:
    get:
      summary: Compare Found Specification Keywords
      description: Compare found specification keywords between two processing results.
      tags:
        - Processings Comparison
      parameters:
        - name: drawing_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
        - name: processing_id_1
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the first (older/left) processing.
        - name: processing_id_2
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the second (newer/right) processing.
      responses:
        '200':
          description: Successfully compared found specification keywords.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comparison_result:
                    type: object
                    properties:
                      status:
                        type: string
                        example: changed
                      left:
                        type: object
                        properties:
                          status:
                            type: string
                            example: changed
                          e:
                            type: object
                            properties:
                              status:
                                type: string
                                example: changed
                              END OF SECTION:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: changed
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: changed
                                      old_value:
                                        type: integer
                                        example: 586
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Violet
                          s:
                            type: object
                            properties:
                              status:
                                type: string
                                example: identical
                              Section:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: identical
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 585
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Violet
                          g:
                            type: object
                            properties:
                              status:
                                type: string
                                example: deleted
                              GENERAL:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: deleted
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 544
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Violet
                          f:
                            type: object
                            properties:
                              status:
                                type: string
                                example: added
                              Fittings:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: added
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 592
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Violet
                      right:
                        type: object
                        properties:
                          status:
                            type: string
                            example: changed
                          e:
                            type: object
                            properties:
                              status:
                                type: string
                                example: changed
                              END OF SECTION:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: changed
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: changed
                                      new_value:
                                        type: integer
                                        example: 591
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Violet
                          s:
                            type: object
                            properties:
                              status:
                                type: string
                                example: identical
                              Section:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: identical
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 585
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: identical
                                      value:
                                        type: string
                                        example: Violet
                          g:
                            type: object
                            properties:
                              status:
                                type: string
                                example: deleted
                              GENERAL:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: deleted
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 544
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: deleted
                                      value:
                                        type: string
                                        example: Violet
                          f:
                            type: object
                            properties:
                              status:
                                type: string
                                example: added
                              Fittings:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    example: added
                                  colorId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 9
                                  keywordColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#7F00FF"
                                  keywordType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: specification
                                  keywordId:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 592
                                  colorPriority:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: integer
                                        example: 1
                                  colorType:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Specification
                                  textColor:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: "#000000"
                                  colorName:
                                    type: object
                                    properties:
                                      status:
                                        type: string
                                        example: added
                                      value:
                                        type: string
                                        example: Violet
        '403':
          description: Access to the comparison is forbidden.
        '404':
          description: Drawing or processing not found.
        '500':
          description: Internal server error.

  /api/v1/drawings/{drawing_id}/processings-comparison/{processing_id_1}/{processing_id_2}/software-versions/:
    get:
      summary: Compare Software Versions
      description: Compare software versions between two processing results.
      tags:
        - Processings Comparison
      parameters:
        - name: drawing_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
        - name: processing_id_1
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the first (older/left) processing.
        - name: processing_id_2
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the second (newer/right) processing.
      responses:
        '200':
          description: Successfully compared software versions.
          content:
            application/json:
              example:
                comparison_result:
                  status: changed
                  left:
                    status: changed
                    model_version:
                      status: changed
                      old_value: "28/08/2024"
                    back_end_sw_version:
                      status: identical
                      old_value: "0.1.56"
                    ml_sw_version:
                      status: changed
                      old_value: "0.3.50"
                    front_end_sw_version:
                      status: changed
                      old_value: "1.2.3"
                  right:
                    status: changed
                    model_version:
                      status: changed
                      new_value: "11/01/2025"
                    back_end_sw_version:
                      status: identical
                      new_value: "0.1.56"
                    ml_sw_version:
                      status: changed
                      new_value: "0.3.59"
                    front_end_sw_version:
                      status: changed
                      new_value: "0.1.42"
        '403':
          description: Access to the comparison is forbidden.
        '404':
          description: Drawing or processing not found.
        '500':
          description: Internal server error.

  /api/v1/drawings/{drawing_id}/processings-comparison/{processing_id_1}/{processing_id_2}/found-objects/:
    get:
      summary: Compare Found Objects
      description: Compare found objects between two processing results.
      tags:
        - Processings Comparison
      parameters:
        - name: drawing_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the drawing.
        - name: processing_id_1
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the first (older/left) processing.
        - name: processing_id_2
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the second (newer/right) processing.
      responses:
        '200':
          description: Successfully compared found objects.
          content:
            application/json:
              example:
                comparison_result:
                  status: changed
                  left:
                    status: changed
                    Appliances:
                      status: identical
                      refrigerator:
                        status: identical
                        value: 2
                      dishwasher:
                        status: identical
                        value: 1
                    Casework_Cabinets:
                      status: changed
                      vanity_cabinet:
                        status: deleted
                        value: 1
                      wall_cabinet:
                        status: identical
                        wall_cabinet_closed_door:
                          status: identical
                          value: 21
                      tall_cabinet:
                        status: changed
                        tall_cabinet_closed_door:
                          status: changed
                          old_value: 3
                      base_cabinet:
                        status: changed
                        base_cabinet_drawer_door:
                          status: changed
                          old_value: 21
                        base_cabinet_drawer_stack:
                          status: changed
                          old_value: 2
                        base_cabinet_ADA_Sink:
                          status: identical
                          value: 3
                      corner_cabinet:
                        status: added
                        value: 2
                  right:
                    status: changed
                    Appliances:
                      status: identical
                      refrigerator:
                        status: identical
                        value: 2
                      dishwasher:
                        status: identical
                        value: 1
                    Casework_Cabinets:
                      status: changed
                      vanity_cabinet:
                        status: deleted
                        value: 1
                      wall_cabinet:
                        status: identical
                        wall_cabinet_closed_door:
                          status: identical
                          value: 21
                      tall_cabinet:
                        status: changed
                        tall_cabinet_closed_door:
                          status: changed
                          new_value: 4
                      base_cabinet:
                        status: changed
                        base_cabinet_drawer_door:
                          status: changed
                          new_value: 19
                        base_cabinet_drawer_stack:
                          status: changed
                          new_value: 3
                        base_cabinet_ADA_Sink:
                          status: identical
                          value: 3
                      corner_cabinet:
                        status: added
                        value: 2
        '403':
          description: Access to the comparison is forbidden.
        '404':
          description: Drawing or processing not found.
        '500':
          description: Internal server error.
          
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: "Please include the word 'Token' followed by a space before the actual token value."

    TRAIN-API-KEY:
      type: apiKey
      in: header
      name: TRAIN-API-KEY
      description: |
        API key required for authentication. 
        It must be included in the `TRAIN-API-KEY` header in every request.
